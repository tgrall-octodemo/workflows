name : "Deploy to Google Kubernetes Engine (GKE)"


on: 
  workflow_call:
    inputs:
      cluster-name:
        required: true
        type: string        
      namespace:
        required: true
        type: string
      environment:
        required: true
        type: string
      branch:
        required: true
        type: string
    outputs:
      service-url:
        description: "URL to deployed service"
        value: ${{ jobs.deploy.outputs.service-url }}
    secrets:
      project-id:
        required: true
      gke-sa-key:
        required: true

env:
  GKE_ZONE: europe-central2-a
  DEPLOYMENT_NAME: gke-test 

permissions:
  id-token: write
  contents: read

jobs:


  ## Adding multiple jobs for demo purposes
  init-deployment:
    runs-on: ubuntu-latest
    steps:
    - id: msg
      name: " 👋  - Starting Deployment to AKS"
      run : |
        echo " 👋  - Starting Deployment to AKS"
        echo " \t ${{ inputs.resource-group }} - ${{ inputs.cluster-name }} - ${{ inputs.namespace }} - ${{ inputs.environment }} - ${{ inputs.branch }}"


  deploy:
    runs-on: ubuntu-latest
    needs: [init-deployment]
    environment: 
      name: ${{inputs.environment}}   
      url: ${{steps.kube-deploy.outputs.service-url}}    

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.gke-sa-key }}
        project_id: tgrall-demos

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ inputs.cluster-name }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.gke-sa-key}}
    # Deploy the Docker image to the GKE cluster

    - name: Deploy
      run: |-
        kubectl create namespace ${{inputs.namespace}} --dry-run=client -o json | kubectl apply -f -                 
        sed -i 's/IMAGE_TAG/main/g' kubernetes/deployment.yml 
        kubectl apply -f ./kubernetes/deployment.yml --namespace=${{inputs.namespace}}
        kubectl -n  ${{inputs.namespace}} rollout restart deployment calculator-service
        echo "🕚  - Wait 20s for service deployment"
        #sleep 20s
        #IP_SERVICE=$(kubectl get services -n ${{inputs.namespace}}  -o json | jq -r '.items[] | select(.metadata.name == "calculator-service") | .status.loadBalancer?|.ingress[]?|.ip')
        #echo "IP_SERVICE=$IP_SERVICE" >> $GITHUB_ENV
        #echo "🏁 - Service ${{ github.repository }} update in ${{inputs.namespace}} : http://$IP_SERVICE:8080 "
        #echo "::set-output name=service-url::http://$IP_SERVICE:8080"


  deployment-done:
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
    - id: msg
      name: " 🌩️  - Finishing Deployment to GKE"
      run : echo "🌩️  - Finishing Deployment to GKE"        
